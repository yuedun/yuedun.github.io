<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pm2 on 月盾的个人博客</title>
    <link>/tags/pm2/</link>
    <description>Recent content in pm2 on 月盾的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 02 Apr 2020 08:42:11 +0000</lastBuildDate><atom:link href="/tags/pm2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用pm2一键部署多个服务</title>
      <link>/blogdetail/5e85a563c9109f0f909b52bf/</link>
      <pubDate>Thu, 02 Apr 2020 08:42:11 +0000</pubDate>
      
      <guid>/blogdetail/5e85a563c9109f0f909b52bf/</guid>
      <description>pm2支持远程部署服务，创建文件ecosystem.json,内容形式如：  { // Applications part  &amp;#34;apps&amp;#34; : [{ &amp;#34;name&amp;#34; : &amp;#34;API&amp;#34;, &amp;#34;script&amp;#34; : &amp;#34;app.js&amp;#34;, &amp;#34;env&amp;#34;: { &amp;#34;COMMON_VARIABLE&amp;#34;: &amp;#34;true&amp;#34; }, // Environment variables injected when starting with --env production  // http://pm2.keymetrics.io/docs/usage/application-declaration/#switching-to-different-environments  &amp;#34;env_production&amp;#34; : { &amp;#34;NODE_ENV&amp;#34;: &amp;#34;production&amp;#34; } },{ &amp;#34;name&amp;#34; : &amp;#34;WEB&amp;#34;, &amp;#34;script&amp;#34; : &amp;#34;web.js&amp;#34; }], // 部署部分  // Here you describe each environment  &amp;#34;deploy&amp;#34; : { &amp;#34;production&amp;#34; : { &amp;#34;user&amp;#34; : &amp;#34;node&amp;#34;, // 多主机配置  &amp;#34;host&amp;#34; : [&amp;#34;212.</description>
    </item>
    
    <item>
      <title>pm2设置NODE_ENV环境变量</title>
      <link>/blogdetail/5a98c43ff4583f741c210b89/</link>
      <pubDate>Fri, 02 Mar 2018 03:25:51 +0000</pubDate>
      
      <guid>/blogdetail/5a98c43ff4583f741c210b89/</guid>
      <description>nodejs中经常使用到环境变量，最常见的如：process.env.NODE_ENV，可以配置环境变量，可以临时设置
设置方式一： linux：export NODE_ENV=development&amp;amp;&amp;amp; node app.js
win：set NODE_ENV=development&amp;amp;&amp;amp; node app.js
一般是作临时变量在系统启动时设置，不影响其他系统，也可同时运行开发环境和生产环境，只需要根据process.env.NODE_ENV来运行不同逻辑即可，
设置方式二： 而设置环境变量在pm2中可以轻松实现
 pm2 start pm2.json &amp;ndash;env production
 --env production参数是为了设置环境变量，由pm2.json中的配置决定设置什么样的环境变量
//pm2.json { &amp;quot;apps&amp;quot; : [{ &amp;quot;name&amp;quot;: &amp;quot;issue&amp;quot;, &amp;quot;cwd&amp;quot;: &amp;quot;dest&amp;quot;, &amp;quot;script&amp;quot; : &amp;quot;bin/www.js&amp;quot;, &amp;quot;instances&amp;quot; : &amp;quot;2&amp;quot;, &amp;quot;exec_mode&amp;quot; : &amp;quot;cluster&amp;quot;, &amp;quot;env&amp;quot;: { &amp;quot;NODE_ENV&amp;quot;: &amp;quot;development&amp;quot;, &amp;quot;PORT&amp;quot;: 3002 }, &amp;quot;env_production&amp;quot; : { &amp;quot;NODE_ENV&amp;quot;: &amp;quot;production&amp;quot;, &amp;quot;PORT&amp;quot;: 3003 }, &amp;quot;log_date_format&amp;quot;: &amp;quot;YYYY-MM-DD_HH:mm Z&amp;quot;, &amp;quot;merge_logs&amp;quot;: true }] } 如果不加参数则默认使用
&amp;quot;env&amp;quot;: { &amp;quot;NODE_ENV&amp;quot;: &amp;quot;development&amp;quot;, &amp;quot;PORT&amp;quot;: 3002 } 结果：NODE_ENV=development,PORT=3002</description>
    </item>
    
    <item>
      <title>pm2日志记录和日志分割</title>
      <link>/blogdetail/5a69a8301f395d7179259c45/</link>
      <pubDate>Thu, 25 Jan 2018 09:49:36 +0000</pubDate>
      
      <guid>/blogdetail/5a69a8301f395d7179259c45/</guid>
      <description>pm2介绍 pm2是nodejs进程管理工具，现在基本是node生产服务器的标准选择，可以帮助我们实现node多进程服务，开启的多个实例自动实现负载均衡。 最重要的是保证node单进程不会因为错误退出，作为守护进程保证nodejs服务不宕机。 总体来说就是有性能监控、自动重启、负载均衡的作用。
pm2-logrotate介绍 pm2本身是可以输出日志文件的，默认的文件路径：
error log path │ /home/username/.pm2/logs/app-error-0.log out log path │ /home/username/.pm2/logs/app-out-0.log 但是pm2的日志文件不能自动分割，这会导致一个文件不断变大，不但影响性能，查看这些日志也会带来麻烦。所以需要pm2-logrotate来实现自动分割日志。
安装pm2-logrotate pm2 install pm2-logrotate,是用pm2命令，不是npm命令
pm2-logrotate配置
 ``max_size` (默认 10M): 最大为多少时进行分割，例如: 10G, 10M, 10K ``retain` (Defaults to all): This number is the number of rotated logs that are keep at any one time, it means that if you have retain = 7 you will have at most 7 rotated logs and your current one. compress (默认 false): 是否压缩日志 dateFormat (默认 YYYY-MM-DD_HH-mm-ss) : 日志格式 rotateModule (Defaults to true) : Rotate the log of pm2&amp;rsquo;s module like other apps workerInterval (Defaults to 30 in secs) : You can control at which interval the worker is checking the log&amp;rsquo;s size (minimum is 1) rotateInterval (Defaults to 0 0 * * * everyday at midnight): This cron is used to a force rotate when executed.</description>
    </item>
    
    <item>
      <title>pm2的fork模式和cluster模式的区别</title>
      <link>/blogdetail/5a5f5bff4bdc8ea471fd2d9e/</link>
      <pubDate>Wed, 17 Jan 2018 14:21:51 +0000</pubDate>
      
      <guid>/blogdetail/5a5f5bff4bdc8ea471fd2d9e/</guid>
      <description>pm2的fork模式和cluster模式的区别
fork模式 pm2默认启动的是fork模式，是以单核单进程运行的，在fork模式下可以直接运行coffee-script，PHP，python。 参考：http://pm2.keymetrics.io/docs/tutorials/using-transpilers-with-pm2 运行非js语言必须设置运行模式为fork_mode
cluster模式 cluster模式可以根据CPU数量进行实例扩展，可以开启多进程而不需要修改代码。可提高程序性能和可靠性。类似于分布式系统，只不过是在单台机器上开启多实例，而pm2自带负载均衡。 ** 使用方法 ** pm2 start app.js -i max 使用-i参数，max代表最大CPU进程数
也可以使用文件方式： processes.json文件：
{ &amp;#34;apps&amp;#34; : [{ &amp;#34;script&amp;#34; : &amp;#34;api.js&amp;#34;, &amp;#34;instances&amp;#34; : &amp;#34;max&amp;#34;, &amp;#34;exec_mode&amp;#34; : &amp;#34;cluster&amp;#34; }] } pm2 start processes.json</description>
    </item>
    
  </channel>
</rss>
