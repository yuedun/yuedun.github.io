<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>路由 on 月盾的个人博客</title>
    <link>/tags/%E8%B7%AF%E7%94%B1/</link>
    <description>Recent content in 路由 on 月盾的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 08 Jan 2021 03:55:56 +0000</lastBuildDate><atom:link href="/tags/%E8%B7%AF%E7%94%B1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>svelte history路由刷新后404</title>
      <link>/blogdetail/5ff7d7cc3f518207e72349ed/</link>
      <pubDate>Fri, 08 Jan 2021 03:55:56 +0000</pubDate>
      
      <guid>/blogdetail/5ff7d7cc3f518207e72349ed/</guid>
      <description>npms.io上搜索到svelte的route包其实也不算少，使用比较广泛的svelte-spa-router路由包却不支持history模式。有些支持history模式的使用上也不是很方便，试用过五六个支持history的路由后最终@spaceavocado/svelte-router算是满足了要求。
 使用简单 功能丰富 支持history和hash 我也是够难伺候的。  在试用了多个支持history的路由过程中，都遇到了一个问题：切换路由后刷新404。这也算是单页应用的通病了。不过像vue这种是在部署到服务器上刷新404，而svelte却在开发过程中也出现了，又想放弃了&amp;hellip; 好在我也是试用过五六七八个路由的人了，中间不知道尝试过多少种方法来实现history路由。最后使用@spaceavocado/svelte-router包实现了history路由的时候我还是满心欢喜。
使用方法：
//App.svelte&amp;lt;script&amp;gt;import RouterView from &#39;@spaceavocado/svelte-router/component/view&#39;;import { routes } from &#39;./router.js&#39;&amp;lt;/script&amp;gt;&amp;lt;RouterView /&amp;gt;//router.js import createRouter from &amp;#39;@spaceavocado/svelte-router&amp;#39;; import index from &amp;#39;./index/index.svelte&amp;#39;; import a from &amp;#39;./a/a.svelte&amp;#39;; import b from &amp;#39;./b/b.svelte&amp;#39;; export const routes = createRouter({ mode: &amp;#34;HISTORY&amp;#34;, routes: [ { path: &amp;#39;/&amp;#39;, name: &amp;#39;HOME&amp;#39;, component: index, }, { path: &amp;#39;/a&amp;#39;, name: &amp;#39;a&amp;#39;, component: a, }, { path: &amp;#39;/b&amp;#39;, name: &amp;#39;b&amp;#39;, component: b, }, { path: &amp;#39;*&amp;#39;, component: index, }, ], }); // index.</description>
    </item>
    
  </channel>
</rss>
