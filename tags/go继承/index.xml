<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go继承 on 月盾的博客</title>
    <link>https://www.yuedun.wang/tags/go%E7%BB%A7%E6%89%BF/</link>
    <description>Recent content in go继承 on 月盾的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 16 Jun 2017 15:03:25 +0000</lastBuildDate><atom:link href="https://www.yuedun.wang/tags/go%E7%BB%A7%E6%89%BF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>go语言实现继承，重写</title>
      <link>https://www.yuedun.wang/blogdetail/5944b81d9d957900957feff6/</link>
      <pubDate>Fri, 16 Jun 2017 15:03:25 +0000</pubDate>
      
      <guid>https://www.yuedun.wang/blogdetail/5944b81d9d957900957feff6/</guid>
      <description>以实际遇到过得情况为例，用户的数据结构中有类型为日期类型time.Time的createdAt属性，经过反复的格式化处理，在页面上输出的还是2017-05-31 06:49:09 +0800 CST这种格式，所以猜想日期类型是不能直接输出2017-05-31 06:49:09格式的，只能输出格式化后的字符串类型。于是利用go的继承将User的数据结构继承都UserPojo里，再单独对createdAt进行修改，重写为string类型。
package main  import &amp;#34;fmt&amp;#34; import &amp;#34;time&amp;#34;  type User struct {  name string  age int  createdAt time.Time }  type UserPojo struct {  User  createdAt string }  func (user *User) getName(){  fmt.Println(&amp;#34;获取用户名：&amp;#34;, user.name) }  func main() {  user := new(User)  user.name=&amp;#34;张三&amp;#34;  user.age=26  user.createdAt=time.Now()  fmt.Println(&amp;#34;user.createdAt&amp;#34;,user.createdAt)   userpj := new(UserPojo)  userpj.User = *user  userpj.</description>
    </item>
    
  </channel>
</rss>
