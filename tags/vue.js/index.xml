<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vue.js on 月盾的个人博客</title>
    <link>https://www.yuedun.wang/tags/vue.js/</link>
    <description>Recent content in vue.js on 月盾的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 27 Jan 2016 14:59:54 +0000</lastBuildDate><atom:link href="https://www.yuedun.wang/tags/vue.js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vue.js click点击事件获取当前元素对象</title>
      <link>https://www.yuedun.wang/blogdetail/56a8db6abf2e89202c146370/</link>
      <pubDate>Wed, 27 Jan 2016 14:59:54 +0000</pubDate>
      
      <guid>https://www.yuedun.wang/blogdetail/56a8db6abf2e89202c146370/</guid>
      <description>Vue.js可以传递$event对象
&amp;lt;body id=&amp;quot;app&amp;quot;&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li v-on:click=&amp;quot;say(&#39;hello!&#39;, $event)&amp;quot;&amp;gt;点击当前行文本&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;li2&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;li3&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;script&amp;gt;new Vue({el: &#39;#app&#39;,data: {message: &#39;Hello Vue.js!&#39;},methods: {say: function(msg, event) {//获取点击对象 var el = event.currentTarget;alert(&amp;quot;当前对象的内容：&amp;quot;+el.innerHTML);}}})&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;函数调用处传递$event
v-on:click=&amp;quot;say(&#39;hello!&#39;, $event)&amp;quot;
函数中获取到的event.currentTarget对象就是当前元素
在线示例
请查看HTML页面示例源码</description>
    </item>
    
    <item>
      <title>vue.js对表单值初始化</title>
      <link>https://www.yuedun.wang/blogdetail/56970097d8e9ee3c03297d3b/</link>
      <pubDate>Thu, 14 Jan 2016 01:57:43 +0000</pubDate>
      
      <guid>https://www.yuedun.wang/blogdetail/56970097d8e9ee3c03297d3b/</guid>
      <description>新建表单有些input输入框需要默认值，比如性别需要一个男或女默认值。再比如一个日期选择框需要默认今天。如果按照HTML的方式设置不会起作用
&amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;gender&amp;#34; value=&amp;#34;0&amp;#34; checked=&amp;#34;checked&amp;#34; v-model=&amp;#34;gender&amp;#34;&amp;gt;男&amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;gender&amp;#34; value=&amp;#34;1&amp;#34; v-model=&amp;#34;gender&amp;#34;&amp;gt;女&amp;lt;/p&amp;gt; &amp;lt;input type=&amp;#34;date&amp;#34; value=&amp;#34;2016-01-06&amp;#34; v-model=&amp;#34;date&amp;#34;&amp;gt;&amp;lt;/p&amp;gt; 在vue.js页面中上面这种设置方式是不会起作用的,性别不会选中，日期也不会有值。解决办法是对v-model属性设值，在初始化时给gender=0，那么默认会选中性别男，给date=&amp;ldquo;2016-01-06&amp;quot;日期控件也有值。</description>
    </item>
    
    <item>
      <title>vue.js中使用focus，blur事件</title>
      <link>https://www.yuedun.wang/blogdetail/5691d933d8e9ee3c03297d39/</link>
      <pubDate>Sun, 10 Jan 2016 04:08:19 +0000</pubDate>
      
      <guid>https://www.yuedun.wang/blogdetail/5691d933d8e9ee3c03297d39/</guid>
      <description>在线示例
使用focus，blur可对表单进行验证，除了这两个事件，还有一个watch属性可监听data属性值得变化，具体可打开浏览器控制台看属性值得变化情况，代码可直接在浏览器中查看源码</description>
    </item>
    
    <item>
      <title>vue.js开发gulp监听文件变化自动编译</title>
      <link>https://www.yuedun.wang/blogdetail/568a088edb1fef9e0cda949e/</link>
      <pubDate>Mon, 04 Jan 2016 05:52:14 +0000</pubDate>
      
      <guid>https://www.yuedun.wang/blogdetail/568a088edb1fef9e0cda949e/</guid>
      <description>直接看代码：
var gulp = require(&amp;#39;gulp&amp;#39;) var webpack = require(&amp;#34;gulp-webpack&amp;#34;); var webpackConfig = require(&amp;#34;./webpack.config.js&amp;#34;); // gulp.task(&amp;#34;webpack&amp;#34;, function(callback) { // var myConfig = Object.create(webpackConfig); // webpack(myConfig, function(err, stats) { // console.log(&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;err:&amp;#34;+JSON.stringify(err)) // console.log(&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;stats:&amp;#34;+stats) // if(err) throw new Error(&amp;#34;webpack&amp;#34;, err); // callback(); // }); // });  /** * 编译时有错误提示 */ gulp.task(&amp;#34;webpack&amp;#34;, function(){ return gulp.src(&amp;#34;./app.js&amp;#34;) .pipe(webpack(Object.create(webpackConfig))) .pipe(gulp.dest(&amp;#34;./dist/&amp;#34;)) }); gulp.watch(&amp;#39;./views/*&amp;#39;, [&amp;#39;webpack&amp;#39;]); webpack.config.js配置
var webpack = require(&amp;#34;webpack&amp;#34;); module.exports = { entry: //&amp;#34;./app.js&amp;#34;,  { app:&amp;#34;./app.js&amp;#34; // vendor: [&amp;#34;.</description>
    </item>
    
  </channel>
</rss>
