<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>正则替换 on 月盾的个人博客</title>
    <link>https://www.yuedun.wang/tags/%E6%AD%A3%E5%88%99%E6%9B%BF%E6%8D%A2/</link>
    <description>Recent content in 正则替换 on 月盾的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 14 Jun 2021 10:40:52 +0000</lastBuildDate><atom:link href="https://www.yuedun.wang/tags/%E6%AD%A3%E5%88%99%E6%9B%BF%E6%8D%A2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vscode正则查找替换</title>
      <link>https://www.yuedun.wang/blogdetail/5e5a3fb45bd8165f28d21307/</link>
      <pubDate>Mon, 14 Jun 2021 10:40:52 +0000</pubDate>
      
      <guid>https://www.yuedun.wang/blogdetail/5e5a3fb45bd8165f28d21307/</guid>
      <description>查找某一类型字符串： 正则表达式onclick=.*&amp;quot; 会查找到所有： onclick=&amp;quot;_msq.push([&#39;trackEvent&#39;, &#39;210074305d6b0409-09c7759e04e98528&#39;, &#39;&#39;pcpid&#39;, &#39;&#39;]);&amp;quot;
onclick=是固定一样的字符，
.代表除\r和\n之外的任意字符，等价于[^\r\n]
*代表匹配前面的模式 0或多次 {0,}
&amp;quot;这是字符串最后一个字符
在vscode中的效果如下： 至于要替换成什么就看自己需求了，如果要给选中的字符串包裹字符串则需要修改成这样：
查找替换 查找：(onclick=.*&amp;quot;)
替换：aaa($1)
结果：
替换字符串两头，保留中间 两部分文字交换位置 相同模式的文字交换位置。
查找：(\(\d{4}-\d{1,2}-\d{2}\)) (\[.*\))
替换：$2 $1
结果：
vscode中一对括号()代表一个变量。
第一组正则 (\(\d{4}-\d{1,2}-\d{2}\)) 对应 $1，
第二组正则 (\[.*\))对应 $2，以此类推。
所以，可以查找多组数据，在替换部分将两个对应变量交换位置即可。</description>
    </item>
    
    <item>
      <title>mongodb forEach替换文本</title>
      <link>https://www.yuedun.wang/blogdetail/5bb08746f846d21847dc2aef/</link>
      <pubDate>Sun, 30 Sep 2018 08:20:22 +0000</pubDate>
      
      <guid>https://www.yuedun.wang/blogdetail/5bb08746f846d21847dc2aef/</guid>
      <description>最近七牛云存储要收回测试域名，但是我的博客中图片使用了这些测试域名，所以要替换掉，避免图片不可访问。在文档中没有找到可以直接替换的方法，所以就使用了mongodb的forEach循环替换。 首先用正则查询法查出使用了测试域名的文档，然后forEach循环，在每个循环中使用js的正则替换函数将域名替换掉，最后再保存该文档即可。
db.getCollection(&amp;#39;blogs&amp;#39;).find({content:{$regex:/hopefully.qiniudn.com/}}).forEach(function(item){ item.content = item.content.replace(/hopefully.qiniudn.com/g, &amp;#39;hopefully-img.yuedun.wang&amp;#39;) db.getCollection(&amp;#39;blogs&amp;#39;).save(item) print(&amp;#34;&amp;gt;&amp;gt;&amp;#34;, item.content); }) </description>
    </item>
    
  </channel>
</rss>
